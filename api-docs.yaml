---
openapi: 3.0.3
info:
  title: Api Documentation
  description: Api Documentation
  termsOfService: urn:tos
  contact: {}
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0
  version: '1.0'
servers:
  - url: http://localhost:8080
    description: Inferred Url
tags:
  - name: assignment-controller
    description: Assignment Controller
  - name: authentication-controller
    description: Authentication Controller
  - name: basic-error-controller
    description: Basic Error Controller
  - name: course-controller
    description: Course Controller
  - name: user-controller
    description: User Controller
paths:
  "/api/assignments/{assignmentId}":
    get:
      tags:
        - assignment-controller
      summary: getDetailedAssignment
      operationId: getDetailedAssignmentUsingGET
      parameters:
        - name: assignmentId
          in: path
          description: assignmentId
          required: true
          style: simple
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            "*/*":
              schema:
                "$ref": "#/components/schemas/DetailedAssignmentDto"
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
    delete:
      tags:
        - assignment-controller
      summary: deleteAssignment
      operationId: deleteAssignmentUsingDELETE
      parameters:
        - name: assignmentId
          in: path
          description: assignmentId
          required: true
          style: simple
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
  "/api/assignments/{assignmentId}/users":
    get:
      tags:
        - assignment-controller
      summary: getStudentsByAssignment
      operationId: getStudentsByAssignmentUsingGET
      parameters:
        - name: assignmentId
          in: path
          description: assignmentId
          required: true
          style: simple
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            "*/*":
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/UserDto"
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  "/api/public/login":
    post:
      tags:
        - authentication-controller
      summary: login
      operationId: loginUsingPOST
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/AuthenticationRequest"
      responses:
        '200':
          description: OK
          content:
            "*/*":
              schema:
                type: object
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  "/error":
    get:
      tags:
        - basic-error-controller
      summary: errorHtml
      operationId: errorHtmlUsingGET
      responses:
        '200':
          description: OK
          content:
            text/html:
              schema:
                "$ref": "#/components/schemas/ModelAndView"
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
    put:
      tags:
        - basic-error-controller
      summary: errorHtml
      operationId: errorHtmlUsingPUT
      responses:
        '200':
          description: OK
          content:
            text/html:
              schema:
                "$ref": "#/components/schemas/ModelAndView"
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
    post:
      tags:
        - basic-error-controller
      summary: errorHtml
      operationId: errorHtmlUsingPOST
      responses:
        '200':
          description: OK
          content:
            text/html:
              schema:
                "$ref": "#/components/schemas/ModelAndView"
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
    delete:
      tags:
        - basic-error-controller
      summary: errorHtml
      operationId: errorHtmlUsingDELETE
      responses:
        '200':
          description: OK
          content:
            text/html:
              schema:
                "$ref": "#/components/schemas/ModelAndView"
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
    options:
      tags:
        - basic-error-controller
      summary: errorHtml
      operationId: errorHtmlUsingOPTIONS
      responses:
        '200':
          description: OK
          content:
            text/html:
              schema:
                "$ref": "#/components/schemas/ModelAndView"
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
    head:
      tags:
        - basic-error-controller
      summary: errorHtml
      operationId: errorHtmlUsingHEAD
      responses:
        '200':
          description: OK
          content:
            text/html:
              schema:
                "$ref": "#/components/schemas/ModelAndView"
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
    patch:
      tags:
        - basic-error-controller
      summary: errorHtml
      operationId: errorHtmlUsingPATCH
      responses:
        '200':
          description: OK
          content:
            text/html:
              schema:
                "$ref": "#/components/schemas/ModelAndView"
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
    trace:
      tags:
        - basic-error-controller
      summary: errorHtml
      operationId: errorHtmlUsingTRACE
      responses:
        '200':
          description: OK
          content:
            text/html:
              schema:
                "$ref": "#/components/schemas/ModelAndView"
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
  "/api/courses/{courseId}":
    delete:
      tags:
        - course-controller
      summary: deleteCourse
      operationId: deleteCourseUsingDELETE
      parameters:
        - name: courseId
          in: path
          description: courseId
          required: true
          style: simple
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
  "/api/courses/{courseId}/assignments":
    get:
      tags:
        - course-controller
      summary: getAssignmentsByCourseId
      operationId: getAssignmentsByCourseIdUsingGET
      parameters:
        - name: courseId
          in: path
          description: courseId
          required: true
          style: simple
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            "*/*":
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/AssignmentGetDto"
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  "/api/user/current":
    get:
      tags:
        - user-controller
      summary: getCurrentUser
      operationId: getCurrentUserUsingGET
      parameters:
        - name: accountNonExpired
          in: query
          required: false
          style: form
          schema:
            type: boolean
        - name: accountNonLocked
          in: query
          required: false
          style: form
          schema:
            type: boolean
        - name: authorities[0].authority
          in: query
          required: false
          style: form
          schema:
            type: string
        - name: credentialsNonExpired
          in: query
          required: false
          style: form
          schema:
            type: boolean
        - name: enabled
          in: query
          required: false
          style: form
          schema:
            type: boolean
        - name: firstName
          in: query
          required: true
          style: form
          schema:
            maximum: 100
            minimum: 1
            maxLength: 100
            minLength: 1
            type: string
        - name: id
          in: query
          required: false
          style: form
          schema:
            type: integer
            format: int64
        - name: lastName
          in: query
          required: true
          style: form
          schema:
            maximum: 100
            minimum: 1
            maxLength: 100
            minLength: 1
            type: string
        - name: password
          in: query
          required: true
          style: form
          schema:
            type: string
        - name: role
          in: query
          required: true
          style: form
          schema:
            type: string
            enum:
              - ROLE_STUDENT
              - ROLE_TEACHER
        - name: username
          in: query
          required: true
          style: form
          schema:
            maximum: 100
            minimum: 8
            maxLength: 100
            minLength: 8
            type: string
      responses:
        '200':
          description: OK
          content:
            "*/*":
              schema:
                "$ref": "#/components/schemas/UserDto"
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  "/api/user/current/courses":
    get:
      tags:
        - user-controller
      summary: getCurrentUserCourses
      operationId: getCurrentUserCoursesUsingGET
      parameters:
        - name: accountNonExpired
          in: query
          required: false
          style: form
          schema:
            type: boolean
        - name: accountNonLocked
          in: query
          required: false
          style: form
          schema:
            type: boolean
        - name: authorities[0].authority
          in: query
          required: false
          style: form
          schema:
            type: string
        - name: credentialsNonExpired
          in: query
          required: false
          style: form
          schema:
            type: boolean
        - name: enabled
          in: query
          required: false
          style: form
          schema:
            type: boolean
        - name: firstName
          in: query
          required: true
          style: form
          schema:
            maximum: 100
            minimum: 1
            maxLength: 100
            minLength: 1
            type: string
        - name: id
          in: query
          required: false
          style: form
          schema:
            type: integer
            format: int64
        - name: lastName
          in: query
          required: true
          style: form
          schema:
            maximum: 100
            minimum: 1
            maxLength: 100
            minLength: 1
            type: string
        - name: password
          in: query
          required: true
          style: form
          schema:
            type: string
        - name: role
          in: query
          required: true
          style: form
          schema:
            type: string
            enum:
              - ROLE_STUDENT
              - ROLE_TEACHER
        - name: username
          in: query
          required: true
          style: form
          schema:
            maximum: 100
            minimum: 8
            maxLength: 100
            minLength: 8
            type: string
      responses:
        '200':
          description: OK
          content:
            "*/*":
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/CourseDto"
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
    post:
      tags:
        - user-controller
      summary: saveCourse
      operationId: saveCourseUsingPOST
      parameters:
        - name: accountNonExpired
          in: query
          required: false
          style: form
          schema:
            type: boolean
        - name: accountNonLocked
          in: query
          required: false
          style: form
          schema:
            type: boolean
        - name: authorities[0].authority
          in: query
          required: false
          style: form
          schema:
            type: string
        - name: credentialsNonExpired
          in: query
          required: false
          style: form
          schema:
            type: boolean
        - name: enabled
          in: query
          required: false
          style: form
          schema:
            type: boolean
        - name: firstName
          in: query
          required: true
          style: form
          schema:
            maximum: 100
            minimum: 1
            maxLength: 100
            minLength: 1
            type: string
        - name: id
          in: query
          required: false
          style: form
          schema:
            type: integer
            format: int64
        - name: lastName
          in: query
          required: true
          style: form
          schema:
            maximum: 100
            minimum: 1
            maxLength: 100
            minLength: 1
            type: string
        - name: password
          in: query
          required: true
          style: form
          schema:
            type: string
        - name: role
          in: query
          required: true
          style: form
          schema:
            type: string
            enum:
              - ROLE_STUDENT
              - ROLE_TEACHER
        - name: username
          in: query
          required: true
          style: form
          schema:
            maximum: 100
            minimum: 8
            maxLength: 100
            minLength: 8
            type: string
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/SaveCourseRequest"
      responses:
        '200':
          description: OK
          content:
            "*/*":
              schema:
                "$ref": "#/components/schemas/CourseDto"
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  "/api/user/{userId}":
    get:
      tags:
        - user-controller
      summary: getUserById
      operationId: getUserByIdUsingGET
      parameters:
        - name: userId
          in: path
          description: userId
          required: true
          style: simple
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            "*/*":
              schema:
                "$ref": "#/components/schemas/UserDto"
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
components:
  schemas:
    AssignmentGetDto:
      title: AssignmentGetDto
      type: object
      properties:
        assignmentName:
          type: string
        deadlineDate:
          type: string
        description:
          type: string
        id:
          type: integer
          format: int64
    AuthenticationRequest:
      title: AuthenticationRequest
      type: object
      properties:
        password:
          type: string
        username:
          type: string
    CourseDto:
      title: CourseDto
      type: object
      properties:
        courseName:
          type: string
        id:
          type: integer
          format: int64
        teacherId:
          type: integer
          format: int64
    DetailedAssignmentDto:
      title: DetailedAssignmentDto
      type: object
      properties:
        assignmentName:
          type: string
        deadlineDate:
          type: string
        description:
          type: string
        id:
          type: integer
          format: int64
        studentAssignmentRelationships:
          type: array
          items:
            "$ref": "#/components/schemas/StudentAssignmentRelationshipDto"
    FileDto:
      title: FileDto
      type: object
      properties:
        fileName:
          type: string
        id:
          type: integer
          format: int64
    ModelAndView:
      title: ModelAndView
      type: object
      properties:
        empty:
          type: boolean
        model:
          type: object
        modelMap:
          type: object
          additionalProperties:
            type: object
        reference:
          type: boolean
        status:
          type: string
          enum:
            - ACCEPTED
            - ALREADY_REPORTED
            - BAD_GATEWAY
            - BAD_REQUEST
            - BANDWIDTH_LIMIT_EXCEEDED
            - CHECKPOINT
            - CONFLICT
            - CONTINUE
            - CREATED
            - DESTINATION_LOCKED
            - EXPECTATION_FAILED
            - FAILED_DEPENDENCY
            - FORBIDDEN
            - FOUND
            - GATEWAY_TIMEOUT
            - GONE
            - HTTP_VERSION_NOT_SUPPORTED
            - IM_USED
            - INSUFFICIENT_SPACE_ON_RESOURCE
            - INSUFFICIENT_STORAGE
            - INTERNAL_SERVER_ERROR
            - I_AM_A_TEAPOT
            - LENGTH_REQUIRED
            - LOCKED
            - LOOP_DETECTED
            - METHOD_FAILURE
            - METHOD_NOT_ALLOWED
            - MOVED_PERMANENTLY
            - MOVED_TEMPORARILY
            - MULTIPLE_CHOICES
            - MULTI_STATUS
            - NETWORK_AUTHENTICATION_REQUIRED
            - NON_AUTHORITATIVE_INFORMATION
            - NOT_ACCEPTABLE
            - NOT_EXTENDED
            - NOT_FOUND
            - NOT_IMPLEMENTED
            - NOT_MODIFIED
            - NO_CONTENT
            - OK
            - PARTIAL_CONTENT
            - PAYLOAD_TOO_LARGE
            - PAYMENT_REQUIRED
            - PERMANENT_REDIRECT
            - PRECONDITION_FAILED
            - PRECONDITION_REQUIRED
            - PROCESSING
            - PROXY_AUTHENTICATION_REQUIRED
            - REQUESTED_RANGE_NOT_SATISFIABLE
            - REQUEST_ENTITY_TOO_LARGE
            - REQUEST_HEADER_FIELDS_TOO_LARGE
            - REQUEST_TIMEOUT
            - REQUEST_URI_TOO_LONG
            - RESET_CONTENT
            - SEE_OTHER
            - SERVICE_UNAVAILABLE
            - SWITCHING_PROTOCOLS
            - TEMPORARY_REDIRECT
            - TOO_EARLY
            - TOO_MANY_REQUESTS
            - UNAUTHORIZED
            - UNAVAILABLE_FOR_LEGAL_REASONS
            - UNPROCESSABLE_ENTITY
            - UNSUPPORTED_MEDIA_TYPE
            - UPGRADE_REQUIRED
            - URI_TOO_LONG
            - USE_PROXY
            - VARIANT_ALSO_NEGOTIATES
        view:
          "$ref": "#/components/schemas/View"
        viewName:
          type: string
    SaveCourseRequest:
      title: SaveCourseRequest
      required:
        - courseName
      type: object
      properties:
        courseName:
          maxLength: 100
          minLength: 1
          type: string
    StudentAssignmentRelationshipDto:
      title: StudentAssignmentRelationshipDto
      type: object
      properties:
        files:
          type: array
          items:
            "$ref": "#/components/schemas/FileDto"
        id:
          type: integer
          format: int64
        status:
          type: string
        studentFirstName:
          type: string
        studentId:
          type: integer
          format: int64
        studentLastName:
          type: string
    UserDto:
      title: UserDto
      type: object
      properties:
        firstName:
          type: string
        id:
          type: integer
          format: int64
        lastName:
          type: string
        role:
          type: string
        username:
          type: string
    View:
      title: View
      type: object
      properties:
        contentType:
          type: string
